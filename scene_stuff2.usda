#usda 1.0
(
    defaultPrim = "World"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "World"
{
    def PhysicsScene "physicsScene"
    {
        float physics:contactOffset = 0.02
        vector3f physics:gravityDirection = (0, 0, -1)
        float physics:gravityMagnitude = 9.81
        int physics:positionIterations = 16
        float physics:restOffset = 0.001
        int physics:velocityIterations = 8
    }

    def Xform "ground_plane"
    {
        float3 xformOp:scale = (3, 6, 0.05)
        double3 xformOp:translate = (0, 0, -0.05)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/ground_plane_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "ground_plane_material"
    {
        token outputs:surface.connect = </World/ground_plane_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.30071336, 0.30071336, 0.30071336)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_0"
    {
        float3 xformOp:scale = (0.0625, 0.20125054, 1)
        double3 xformOp:translate = (-2.5, -4, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_0_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_0_material"
    {
        token outputs:surface.connect = </World/pn_wall_0_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.3650176, 0.3650176, 0.3650176)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_1"
    {
        float3 xformOp:scale = (0.17364712, 0.17364712, 1)
        double3 xformOp:translate = (-2.5, -3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_1_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_1_material"
    {
        token outputs:surface.connect = </World/pn_pillar_1_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6060197, 0.6060197, 0.6060197)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_2"
    {
        float3 xformOp:scale = (0.0625, 0.20434694, 1)
        double3 xformOp:translate = (-2.5, 0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_2_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_2_material"
    {
        token outputs:surface.connect = </World/pn_wall_2_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.4531531, 0.4531531, 0.4531531)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_3"
    {
        float3 xformOp:scale = (0.1218638, 0.1218638, 1)
        double3 xformOp:translate = (-2.5, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_3_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_3_material"
    {
        token outputs:surface.connect = </World/pn_pillar_3_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.50321317, 0.50321317, 0.50321317)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_4"
    {
        float3 xformOp:scale = (0.11988377, 0.11988377, 1)
        double3 xformOp:translate = (-2.5, 1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_4_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_4_material"
    {
        token outputs:surface.connect = </World/pn_pillar_4_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.58993065, 0.58993065, 0.58993065)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_5"
    {
        float3 xformOp:scale = (0.21102203, 0.0625, 1)
        double3 xformOp:translate = (-2.5, 2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_5_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_5_material"
    {
        token outputs:surface.connect = </World/pn_wall_5_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5535594, 0.5535594, 0.5535594)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_6"
    {
        float3 xformOp:scale = (0.0625, 0.20032494, 1)
        double3 xformOp:translate = (-2.5, 2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_6_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_6_material"
    {
        token outputs:surface.connect = </World/pn_wall_6_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6834915, 0.6834915, 0.6834915)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_7"
    {
        float3 xformOp:scale = (0.0625, 0.21701252, 1)
        double3 xformOp:translate = (-2.5, 5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_7_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_7_material"
    {
        token outputs:surface.connect = </World/pn_wall_7_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.2932877, 0.2932877, 0.2932877)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_8"
    {
        float3 xformOp:scale = (0.0625, 0.21682973, 1)
        double3 xformOp:translate = (-2, -5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_8_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_8_material"
    {
        token outputs:surface.connect = </World/pn_wall_8_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.2556475, 0.2556475, 0.2556475)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_9"
    {
        float3 xformOp:scale = (0.18474944, 0.18474944, 1)
        double3 xformOp:translate = (-2, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_9_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_9_material"
    {
        token outputs:surface.connect = </World/pn_pillar_9_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5622356, 0.5622356, 0.5622356)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_10"
    {
        float3 xformOp:scale = (0.0625, 0.23648658, 1)
        double3 xformOp:translate = (-1.5, -4, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_10_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_10_material"
    {
        token outputs:surface.connect = </World/pn_wall_10_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.52173686, 0.52173686, 0.52173686)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_11"
    {
        float3 xformOp:scale = (0.0625, 0.21892671, 1)
        double3 xformOp:translate = (-1.5, -3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_11_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_11_material"
    {
        token outputs:surface.connect = </World/pn_wall_11_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.53122437, 0.53122437, 0.53122437)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_12"
    {
        float3 xformOp:scale = (0.0625, 0.23092599, 1)
        double3 xformOp:translate = (-1.5, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_12_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_12_material"
    {
        token outputs:surface.connect = </World/pn_wall_12_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.71702415, 0.71702415, 0.71702415)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_13"
    {
        float3 xformOp:scale = (0.2352286, 0.0625, 1)
        double3 xformOp:translate = (-1.5, 2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_13_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_13_material"
    {
        token outputs:surface.connect = </World/pn_wall_13_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.22749463, 0.22749463, 0.22749463)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_14"
    {
        float3 xformOp:scale = (0.1289388, 0.1289388, 1)
        double3 xformOp:translate = (-1, 3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_14_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_14_material"
    {
        token outputs:surface.connect = </World/pn_pillar_14_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.24787518, 0.24787518, 0.24787518)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_15"
    {
        float3 xformOp:scale = (0.11010014, 0.11010014, 1)
        double3 xformOp:translate = (-0.5, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_15_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_15_material"
    {
        token outputs:surface.connect = </World/pn_pillar_15_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.36678416, 0.36678416, 0.36678416)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_16"
    {
        float3 xformOp:scale = (0.0625, 0.2182416, 1)
        double3 xformOp:translate = (-0.5, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_16_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_16_material"
    {
        token outputs:surface.connect = </World/pn_wall_16_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.4221086, 0.4221086, 0.4221086)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_17"
    {
        float3 xformOp:scale = (0.12669778, 0.12669778, 1)
        double3 xformOp:translate = (-0.5, 2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_17_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_17_material"
    {
        token outputs:surface.connect = </World/pn_pillar_17_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.76199275, 0.76199275, 0.76199275)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_18"
    {
        float3 xformOp:scale = (0.0625, 0.23045655, 1)
        double3 xformOp:translate = (-0.5, 3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_18_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_18_material"
    {
        token outputs:surface.connect = </World/pn_wall_18_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.30268317, 0.30268317, 0.30268317)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_19"
    {
        float3 xformOp:scale = (0.0625, 0.20817013, 1)
        double3 xformOp:translate = (0, -4.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_19_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_19_material"
    {
        token outputs:surface.connect = </World/pn_wall_19_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.42767325, 0.42767325, 0.42767325)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_20"
    {
        float3 xformOp:scale = (0.0625, 0.232, 1)
        double3 xformOp:translate = (0, -3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_20_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_20_material"
    {
        token outputs:surface.connect = </World/pn_wall_20_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.53416985, 0.53416985, 0.53416985)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_21"
    {
        float3 xformOp:scale = (0.0625, 0.2421426, 1)
        double3 xformOp:translate = (0, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_21_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_21_material"
    {
        token outputs:surface.connect = </World/pn_wall_21_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.66559994, 0.66559994, 0.66559994)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_22"
    {
        float3 xformOp:scale = (0.103210025, 0.103210025, 1)
        double3 xformOp:translate = (0, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_22_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_22_material"
    {
        token outputs:surface.connect = </World/pn_pillar_22_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.38927183, 0.38927183, 0.38927183)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_23"
    {
        float3 xformOp:scale = (0.12109829, 0.12109829, 1)
        double3 xformOp:translate = (0, -2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_23_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_23_material"
    {
        token outputs:surface.connect = </World/pn_pillar_23_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7657458, 0.7657458, 0.7657458)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_24"
    {
        float3 xformOp:scale = (0.0625, 0.2157339, 1)
        double3 xformOp:translate = (0, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_24_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_24_material"
    {
        token outputs:surface.connect = </World/pn_wall_24_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5932632, 0.5932632, 0.5932632)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_25"
    {
        float3 xformOp:scale = (0.24572738, 0.0625, 1)
        double3 xformOp:translate = (0, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_25_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_25_material"
    {
        token outputs:surface.connect = </World/pn_wall_25_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.4753111, 0.4753111, 0.4753111)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_26"
    {
        float3 xformOp:scale = (0.12466275, 0.12466275, 1)
        double3 xformOp:translate = (0, -0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_26_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_26_material"
    {
        token outputs:surface.connect = </World/pn_pillar_26_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5368209, 0.5368209, 0.5368209)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_27"
    {
        float3 xformOp:scale = (0.1584586, 0.1584586, 1)
        double3 xformOp:translate = (0, 2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_27_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_27_material"
    {
        token outputs:surface.connect = </World/pn_pillar_27_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7386937, 0.7386937, 0.7386937)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_28"
    {
        float3 xformOp:scale = (0.21096604, 0.0625, 1)
        double3 xformOp:translate = (0, 3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_28_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_28_material"
    {
        token outputs:surface.connect = </World/pn_wall_28_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7985226, 0.7985226, 0.7985226)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_29"
    {
        float3 xformOp:scale = (0.20454547, 0.0625, 1)
        double3 xformOp:translate = (0.5, -5.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_29_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_29_material"
    {
        token outputs:surface.connect = </World/pn_wall_29_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.22826983, 0.22826983, 0.22826983)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_30"
    {
        float3 xformOp:scale = (0.16274461, 0.16274461, 1)
        double3 xformOp:translate = (0.5, -5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_30_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_30_material"
    {
        token outputs:surface.connect = </World/pn_pillar_30_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6752476, 0.6752476, 0.6752476)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_31"
    {
        float3 xformOp:scale = (0.20317638, 0.0625, 1)
        double3 xformOp:translate = (0.5, -4.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_31_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_31_material"
    {
        token outputs:surface.connect = </World/pn_wall_31_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.42897156, 0.42897156, 0.42897156)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_32"
    {
        float3 xformOp:scale = (0.0625, 0.22645572, 1)
        double3 xformOp:translate = (0.5, -4, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_32_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_32_material"
    {
        token outputs:surface.connect = </World/pn_wall_32_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.782647, 0.782647, 0.782647)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_33"
    {
        float3 xformOp:scale = (0.0625, 0.20057406, 1)
        double3 xformOp:translate = (0.5, -3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_33_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_33_material"
    {
        token outputs:surface.connect = </World/pn_wall_33_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6324331, 0.6324331, 0.6324331)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_34"
    {
        float3 xformOp:scale = (0.0625, 0.22684851, 1)
        double3 xformOp:translate = (0.5, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_34_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_34_material"
    {
        token outputs:surface.connect = </World/pn_wall_34_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.3600951, 0.3600951, 0.3600951)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_35"
    {
        float3 xformOp:scale = (0.0625, 0.20557761, 1)
        double3 xformOp:translate = (0.5, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_35_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_35_material"
    {
        token outputs:surface.connect = </World/pn_wall_35_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.46085915, 0.46085915, 0.46085915)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_36"
    {
        float3 xformOp:scale = (0.2476908, 0.0625, 1)
        double3 xformOp:translate = (0.5, -2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_36_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_36_material"
    {
        token outputs:surface.connect = </World/pn_wall_36_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7255118, 0.7255118, 0.7255118)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_37"
    {
        float3 xformOp:scale = (0.15005861, 0.15005861, 1)
        double3 xformOp:translate = (0.5, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_37_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_37_material"
    {
        token outputs:surface.connect = </World/pn_pillar_37_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.30719113, 0.30719113, 0.30719113)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_38"
    {
        float3 xformOp:scale = (0.0625, 0.24352592, 1)
        double3 xformOp:translate = (0.5, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_38_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_38_material"
    {
        token outputs:surface.connect = </World/pn_wall_38_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.37906688, 0.37906688, 0.37906688)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_39"
    {
        float3 xformOp:scale = (0.0625, 0.23044851, 1)
        double3 xformOp:translate = (0.5, -0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_39_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_39_material"
    {
        token outputs:surface.connect = </World/pn_wall_39_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.29170355, 0.29170355, 0.29170355)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_40"
    {
        float3 xformOp:scale = (0.0625, 0.22696894, 1)
        double3 xformOp:translate = (0.5, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_40_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_40_material"
    {
        token outputs:surface.connect = </World/pn_wall_40_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6671759, 0.6671759, 0.6671759)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_41"
    {
        float3 xformOp:scale = (0.2000286, 0.0625, 1)
        double3 xformOp:translate = (0.5, 2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_41_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_41_material"
    {
        token outputs:surface.connect = </World/pn_wall_41_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.39449364, 0.39449364, 0.39449364)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_42"
    {
        float3 xformOp:scale = (0.19290987, 0.19290987, 1)
        double3 xformOp:translate = (0.5, 3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_42_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_42_material"
    {
        token outputs:surface.connect = </World/pn_pillar_42_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7272331, 0.7272331, 0.7272331)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_43"
    {
        float3 xformOp:scale = (0.0625, 0.2153757, 1)
        double3 xformOp:translate = (0.5, 3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_43_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_43_material"
    {
        token outputs:surface.connect = </World/pn_wall_43_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.2347551, 0.2347551, 0.2347551)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_44"
    {
        float3 xformOp:scale = (0.0625, 0.24734747, 1)
        double3 xformOp:translate = (1, -5.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_44_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_44_material"
    {
        token outputs:surface.connect = </World/pn_wall_44_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.25139207, 0.25139207, 0.25139207)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_45"
    {
        float3 xformOp:scale = (0.20346062, 0.0625, 1)
        double3 xformOp:translate = (1, -5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_45_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_45_material"
    {
        token outputs:surface.connect = </World/pn_wall_45_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6563613, 0.6563613, 0.6563613)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_46"
    {
        float3 xformOp:scale = (0.0625, 0.20641957, 1)
        double3 xformOp:translate = (1, -4.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_46_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_46_material"
    {
        token outputs:surface.connect = </World/pn_wall_46_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.48516944, 0.48516944, 0.48516944)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_47"
    {
        float3 xformOp:scale = (0.21325283, 0.0625, 1)
        double3 xformOp:translate = (1, -4, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_47_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_47_material"
    {
        token outputs:surface.connect = </World/pn_wall_47_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.72345984, 0.72345984, 0.72345984)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_48"
    {
        float3 xformOp:scale = (0.21058992, 0.0625, 1)
        double3 xformOp:translate = (1, -3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_48_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_48_material"
    {
        token outputs:surface.connect = </World/pn_wall_48_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.52357763, 0.52357763, 0.52357763)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_49"
    {
        float3 xformOp:scale = (0.0625, 0.21005756, 1)
        double3 xformOp:translate = (1, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_49_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_49_material"
    {
        token outputs:surface.connect = </World/pn_wall_49_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.38702977, 0.38702977, 0.38702977)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_50"
    {
        float3 xformOp:scale = (0.0625, 0.2324939, 1)
        double3 xformOp:translate = (1, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_50_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_50_material"
    {
        token outputs:surface.connect = </World/pn_wall_50_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.46286005, 0.46286005, 0.46286005)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_51"
    {
        float3 xformOp:scale = (0.20605022, 0.0625, 1)
        double3 xformOp:translate = (1, -2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_51_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_51_material"
    {
        token outputs:surface.connect = </World/pn_wall_51_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.3348184, 0.3348184, 0.3348184)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_52"
    {
        float3 xformOp:scale = (0.22941543, 0.0625, 1)
        double3 xformOp:translate = (1, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_52_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_52_material"
    {
        token outputs:surface.connect = </World/pn_wall_52_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.33806884, 0.33806884, 0.33806884)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_53"
    {
        float3 xformOp:scale = (0.10709931, 0.10709931, 1)
        double3 xformOp:translate = (1, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_53_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_53_material"
    {
        token outputs:surface.connect = </World/pn_pillar_53_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5786618, 0.5786618, 0.5786618)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_54"
    {
        float3 xformOp:scale = (0.190542, 0.190542, 1)
        double3 xformOp:translate = (1, -0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_54_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_54_material"
    {
        token outputs:surface.connect = </World/pn_pillar_54_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7157812, 0.7157812, 0.7157812)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_55"
    {
        float3 xformOp:scale = (0.123800464, 0.123800464, 1)
        double3 xformOp:translate = (1, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_55_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_55_material"
    {
        token outputs:surface.connect = </World/pn_pillar_55_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.60138667, 0.60138667, 0.60138667)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_56"
    {
        float3 xformOp:scale = (0.11323118, 0.11323118, 1)
        double3 xformOp:translate = (1, 3.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_56_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_56_material"
    {
        token outputs:surface.connect = </World/pn_pillar_56_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.76130855, 0.76130855, 0.76130855)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_57"
    {
        float3 xformOp:scale = (0.22363356, 0.0625, 1)
        double3 xformOp:translate = (1.5, -5.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_57_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_57_material"
    {
        token outputs:surface.connect = </World/pn_wall_57_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.67077166, 0.67077166, 0.67077166)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_58"
    {
        float3 xformOp:scale = (0.0625, 0.20952049, 1)
        double3 xformOp:translate = (1.5, -5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_58_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_58_material"
    {
        token outputs:surface.connect = </World/pn_wall_58_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.25815848, 0.25815848, 0.25815848)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_59"
    {
        float3 xformOp:scale = (0.22117893, 0.0625, 1)
        double3 xformOp:translate = (1.5, -4.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_59_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_59_material"
    {
        token outputs:surface.connect = </World/pn_wall_59_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.4802148, 0.4802148, 0.4802148)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_60"
    {
        float3 xformOp:scale = (0.0625, 0.23366822, 1)
        double3 xformOp:translate = (1.5, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_60_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_60_material"
    {
        token outputs:surface.connect = </World/pn_wall_60_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.79049915, 0.79049915, 0.79049915)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_61"
    {
        float3 xformOp:scale = (0.14026213, 0.14026213, 1)
        double3 xformOp:translate = (1.5, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_61_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_61_material"
    {
        token outputs:surface.connect = </World/pn_pillar_61_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.40358156, 0.40358156, 0.40358156)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_62"
    {
        float3 xformOp:scale = (0.0625, 0.21243282, 1)
        double3 xformOp:translate = (1.5, -2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_62_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_62_material"
    {
        token outputs:surface.connect = </World/pn_wall_62_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.31412536, 0.31412536, 0.31412536)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_63"
    {
        float3 xformOp:scale = (0.22109409, 0.0625, 1)
        double3 xformOp:translate = (1.5, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_63_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_63_material"
    {
        token outputs:surface.connect = </World/pn_wall_63_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.3671271, 0.3671271, 0.3671271)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_64"
    {
        float3 xformOp:scale = (0.19232656, 0.19232656, 1)
        double3 xformOp:translate = (1.5, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_64_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_64_material"
    {
        token outputs:surface.connect = </World/pn_pillar_64_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.46587846, 0.46587846, 0.46587846)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_65"
    {
        float3 xformOp:scale = (0.0625, 0.22751626, 1)
        double3 xformOp:translate = (1.5, -0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_65_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_65_material"
    {
        token outputs:surface.connect = </World/pn_wall_65_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.230353, 0.230353, 0.230353)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_66"
    {
        float3 xformOp:scale = (0.0625, 0.24180138, 1)
        double3 xformOp:translate = (1.5, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_66_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_66_material"
    {
        token outputs:surface.connect = </World/pn_wall_66_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.78139776, 0.78139776, 0.78139776)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_67"
    {
        float3 xformOp:scale = (0.0625, 0.24243478, 1)
        double3 xformOp:translate = (1.5, 0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_67_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_67_material"
    {
        token outputs:surface.connect = </World/pn_wall_67_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.29978666, 0.29978666, 0.29978666)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_68"
    {
        float3 xformOp:scale = (0.21068737, 0.0625, 1)
        double3 xformOp:translate = (2, -5.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_68_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_68_material"
    {
        token outputs:surface.connect = </World/pn_wall_68_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.44062418, 0.44062418, 0.44062418)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_69"
    {
        float3 xformOp:scale = (0.13789731, 0.13789731, 1)
        double3 xformOp:translate = (2, -5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_69_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_69_material"
    {
        token outputs:surface.connect = </World/pn_pillar_69_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7911853, 0.7911853, 0.7911853)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_70"
    {
        float3 xformOp:scale = (0.17840706, 0.17840706, 1)
        double3 xformOp:translate = (2, -4.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_70_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_70_material"
    {
        token outputs:surface.connect = </World/pn_pillar_70_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.47300503, 0.47300503, 0.47300503)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_71"
    {
        float3 xformOp:scale = (0.24786589, 0.0625, 1)
        double3 xformOp:translate = (2, -3, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_71_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_71_material"
    {
        token outputs:surface.connect = </World/pn_wall_71_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7972536, 0.7972536, 0.7972536)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_72"
    {
        float3 xformOp:scale = (0.23592041, 0.0625, 1)
        double3 xformOp:translate = (2, -2.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_72_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_72_material"
    {
        token outputs:surface.connect = </World/pn_wall_72_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.2928781, 0.2928781, 0.2928781)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_73"
    {
        float3 xformOp:scale = (0.19687094, 0.19687094, 1)
        double3 xformOp:translate = (2, -2, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_73_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_73_material"
    {
        token outputs:surface.connect = </World/pn_pillar_73_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.5475082, 0.5475082, 0.5475082)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_74"
    {
        float3 xformOp:scale = (0.23739877, 0.0625, 1)
        double3 xformOp:translate = (2, -1.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_74_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_74_material"
    {
        token outputs:surface.connect = </World/pn_wall_74_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.23429917, 0.23429917, 0.23429917)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_75"
    {
        float3 xformOp:scale = (0.22514252, 0.0625, 1)
        double3 xformOp:translate = (2, -1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_75_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_75_material"
    {
        token outputs:surface.connect = </World/pn_wall_75_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.71163195, 0.71163195, 0.71163195)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_76"
    {
        float3 xformOp:scale = (0.19607788, 0.19607788, 1)
        double3 xformOp:translate = (2, -0.5, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_76_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_76_material"
    {
        token outputs:surface.connect = </World/pn_pillar_76_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.24806687, 0.24806687, 0.24806687)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_pillar_77"
    {
        float3 xformOp:scale = (0.1595035, 0.1595035, 1)
        double3 xformOp:translate = (2, 0, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cylinder "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_pillar_77_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_pillar_77_material"
    {
        token outputs:surface.connect = </World/pn_pillar_77_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6051275, 0.6051275, 0.6051275)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_78"
    {
        float3 xformOp:scale = (0.1, 6, 0.5)
        double3 xformOp:translate = (-3, 0, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_78_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_78_material"
    {
        token outputs:surface.connect = </World/pn_wall_78_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.34112233, 0.34112233, 0.34112233)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_79"
    {
        float3 xformOp:scale = (0.1, 6, 0.5)
        double3 xformOp:translate = (3, 0, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_79_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_79_material"
    {
        token outputs:surface.connect = </World/pn_wall_79_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.27193198, 0.27193198, 0.27193198)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_80"
    {
        float3 xformOp:scale = (3, 0.1, 0.5)
        double3 xformOp:translate = (0, -6, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_80_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_80_material"
    {
        token outputs:surface.connect = </World/pn_wall_80_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.7341724, 0.7341724, 0.7341724)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }

    def Xform "pn_wall_81"
    {
        float3 xformOp:scale = (3, 0.1, 0.5)
        double3 xformOp:translate = (0, 6, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        def Cube "geom" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMaterialAPI", "PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            rel material:binding = </World/pn_wall_81_material>
            float physics:density = 1000
            float physics:dynamicFriction = 50
            bool physics:kinematicEnabled = 1
            float physics:restitution = 0.01
            bool physics:rigidBodyEnabled = 1
            float physics:staticFriction = 100
            float physxCollision:contactOffset = 0.02
            float physxCollision:restOffset = 0.001
        }
    }

    def Material "pn_wall_81_material"
    {
        token outputs:surface.connect = </World/pn_wall_81_material/diffuseShader.outputs:surface>

        def Shader "diffuseShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.3477292, 0.3477292, 0.3477292)
            float inputs:roughness = 0.4
            token outputs:surface
        }
    }
}

def DistantLight "SunLight"
{
    color3f inputs:color = (1, 1, 0.95)
    float inputs:intensity = 1000
    float3 xformOp:rotateXYZ = (-45, 0, 45)
    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
}

