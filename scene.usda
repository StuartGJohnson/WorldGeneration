#usda 1.0
(
    upAxis = "Z"
)

def DistantLight "SunLight"
{
    color3f inputs:color = (1, 1, 0.95)
    float inputs:intensity = 1000
    float3 xformOp:rotateXYZ = (-45, 0, 45)
    uniform token[] xformOpOrder = ["xformOp:rotateXYZ"]
}

def Xform "ground_plane"
{
    float3 xformOp:scale = (10, 10, 0.05)
    double3 xformOp:translate = (0, 0, -0.05)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </ground_plane_material>
    }
}

def Material "ground_plane_material"
{
    token outputs:surface.connect = </ground_plane_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.46550757, 0.46550757, 0.46550757)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_0"
{
    float3 xformOp:scale = (0.1, 10, 1)
    double3 xformOp:translate = (-10, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_0_material>
    }
}

def Material "pn_wall_0_material"
{
    token outputs:surface.connect = </pn_wall_0_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.5836561, 0.5836561, 0.5836561)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_1"
{
    float3 xformOp:scale = (0.1, 10, 1)
    double3 xformOp:translate = (10, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_1_material>
    }
}

def Material "pn_wall_1_material"
{
    token outputs:surface.connect = </pn_wall_1_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.21500646, 0.21500646, 0.21500646)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_2"
{
    float3 xformOp:scale = (10, 0.1, 1)
    double3 xformOp:translate = (0, -10, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_2_material>
    }
}

def Material "pn_wall_2_material"
{
    token outputs:surface.connect = </pn_wall_2_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.3650176, 0.3650176, 0.3650176)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_3"
{
    float3 xformOp:scale = (10, 0.1, 1)
    double3 xformOp:translate = (0, 10, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_3_material>
    }
}

def Material "pn_wall_3_material"
{
    token outputs:surface.connect = </pn_wall_3_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.33392644, 0.33392644, 0.33392644)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_4"
{
    float3 xformOp:scale = (0.1, 1.1766995, 1)
    double3 xformOp:translate = (-8, -2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_4_material>
    }
}

def Material "pn_wall_4_material"
{
    token outputs:surface.connect = </pn_wall_4_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.73530775, 0.73530775, 0.73530775)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_5"
{
    float3 xformOp:scale = (0.28438437, 0.28438437, 1)
    double3 xformOp:translate = (-8, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_5_material>
    }
}

def Material "pn_pillar_5_material"
{
    token outputs:surface.connect = </pn_pillar_5_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.21787833, 0.21787833, 0.21787833)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_6"
{
    float3 xformOp:scale = (0.30107105, 0.30107105, 1)
    double3 xformOp:translate = (-8, 2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_6_material>
    }
}

def Material "pn_pillar_6_material"
{
    token outputs:surface.connect = </pn_pillar_6_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.21592158, 0.21592158, 0.21592158)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_7"
{
    float3 xformOp:scale = (0.3299769, 0.3299769, 1)
    double3 xformOp:translate = (-8, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_7_material>
    }
}

def Material "pn_pillar_7_material"
{
    token outputs:surface.connect = </pn_pillar_7_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.5269649, 0.5269649, 0.5269649)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_8"
{
    float3 xformOp:scale = (0.31785312, 0.31785312, 1)
    double3 xformOp:translate = (-8, 6, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_8_material>
    }
}

def Material "pn_pillar_8_material"
{
    token outputs:surface.connect = </pn_pillar_8_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.6856583, 0.6856583, 0.6856583)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_9"
{
    float3 xformOp:scale = (0.36116385, 0.36116385, 1)
    double3 xformOp:translate = (-6, -8, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_9_material>
    }
}

def Material "pn_pillar_9_material"
{
    token outputs:surface.connect = </pn_pillar_9_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.6188836, 0.6188836, 0.6188836)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_10"
{
    float3 xformOp:scale = (0.6554795, 0.1, 1)
    double3 xformOp:translate = (-6, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_10_material>
    }
}

def Material "pn_wall_10_material"
{
    token outputs:surface.connect = </pn_wall_10_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.7743278, 0.7743278, 0.7743278)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_11"
{
    float3 xformOp:scale = (0.59274584, 0.1, 1)
    double3 xformOp:translate = (-6, 2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_11_material>
    }
}

def Material "pn_wall_11_material"
{
    token outputs:surface.connect = </pn_wall_11_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.25802982, 0.25802982, 0.25802982)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_12"
{
    float3 xformOp:scale = (0.1, 1.103726, 1)
    double3 xformOp:translate = (-6, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_12_material>
    }
}

def Material "pn_wall_12_material"
{
    token outputs:surface.connect = </pn_wall_12_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.68427694, 0.68427694, 0.68427694)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_13"
{
    float3 xformOp:scale = (0.1, 1.0362281, 1)
    double3 xformOp:translate = (-4, -6, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_13_material>
    }
}

def Material "pn_wall_13_material"
{
    token outputs:surface.connect = </pn_wall_13_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.78386945, 0.78386945, 0.78386945)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_14"
{
    float3 xformOp:scale = (1.0520406, 0.1, 1)
    double3 xformOp:translate = (-4, 2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_14_material>
    }
}

def Material "pn_wall_14_material"
{
    token outputs:surface.connect = </pn_wall_14_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.6976428, 0.6976428, 0.6976428)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_15"
{
    float3 xformOp:scale = (0.1, 1.3617069, 1)
    double3 xformOp:translate = (-4, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_15_material>
    }
}

def Material "pn_wall_15_material"
{
    token outputs:surface.connect = </pn_wall_15_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.5464113, 0.5464113, 0.5464113)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_16"
{
    float3 xformOp:scale = (0.1, 0.5458244, 1)
    double3 xformOp:translate = (-2, -6, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_16_material>
    }
}

def Material "pn_wall_16_material"
{
    token outputs:surface.connect = </pn_wall_16_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.33673897, 0.33673897, 0.33673897)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_17"
{
    float3 xformOp:scale = (0.2159584, 0.2159584, 1)
    double3 xformOp:translate = (-2, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_17_material>
    }
}

def Material "pn_pillar_17_material"
{
    token outputs:surface.connect = </pn_pillar_17_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.33967453, 0.33967453, 0.33967453)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_18"
{
    float3 xformOp:scale = (0.25559473, 0.25559473, 1)
    double3 xformOp:translate = (0, -2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_18_material>
    }
}

def Material "pn_pillar_18_material"
{
    token outputs:surface.connect = </pn_pillar_18_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.58141065, 0.58141065, 0.58141065)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_19"
{
    float3 xformOp:scale = (0.87018096, 0.1, 1)
    double3 xformOp:translate = (2, -8, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_19_material>
    }
}

def Material "pn_wall_19_material"
{
    token outputs:surface.connect = </pn_wall_19_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.32570422, 0.32570422, 0.32570422)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_20"
{
    float3 xformOp:scale = (0.38733092, 0.38733092, 1)
    double3 xformOp:translate = (2, -4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_20_material>
    }
}

def Material "pn_pillar_20_material"
{
    token outputs:surface.connect = </pn_pillar_20_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.58882123, 0.58882123, 0.58882123)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_21"
{
    float3 xformOp:scale = (0.1, 0.67113864, 1)
    double3 xformOp:translate = (2, -2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_21_material>
    }
}

def Material "pn_wall_21_material"
{
    token outputs:surface.connect = </pn_wall_21_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.6374761, 0.6374761, 0.6374761)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_22"
{
    float3 xformOp:scale = (0.2758911, 0.2758911, 1)
    double3 xformOp:translate = (2, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_22_material>
    }
}

def Material "pn_pillar_22_material"
{
    token outputs:surface.connect = </pn_pillar_22_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.793714, 0.793714, 0.793714)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_23"
{
    float3 xformOp:scale = (0.1, 1.0569497, 1)
    double3 xformOp:translate = (4, -4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_23_material>
    }
}

def Material "pn_wall_23_material"
{
    token outputs:surface.connect = </pn_wall_23_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.61076856, 0.61076856, 0.61076856)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_24"
{
    float3 xformOp:scale = (0.1, 1.2759999, 1)
    double3 xformOp:translate = (4, 2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_24_material>
    }
}

def Material "pn_wall_24_material"
{
    token outputs:surface.connect = </pn_wall_24_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.33742884, 0.33742884, 0.33742884)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_25"
{
    float3 xformOp:scale = (0.2630906, 0.2630906, 1)
    double3 xformOp:translate = (4, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_25_material>
    }
}

def Material "pn_pillar_25_material"
{
    token outputs:surface.connect = </pn_pillar_25_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.36064452, 0.36064452, 0.36064452)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_26"
{
    float3 xformOp:scale = (0.38858193, 0.38858193, 1)
    double3 xformOp:translate = (6, -8, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_26_material>
    }
}

def Material "pn_pillar_26_material"
{
    token outputs:surface.connect = </pn_pillar_26_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.7258206, 0.7258206, 0.7258206)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_27"
{
    float3 xformOp:scale = (1.1554387, 0.1, 1)
    double3 xformOp:translate = (6, -6, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_27_material>
    }
}

def Material "pn_wall_27_material"
{
    token outputs:surface.connect = </pn_wall_27_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.43737915, 0.43737915, 0.43737915)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_28"
{
    float3 xformOp:scale = (0.1, 0.9588519, 1)
    double3 xformOp:translate = (6, -4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_28_material>
    }
}

def Material "pn_wall_28_material"
{
    token outputs:surface.connect = </pn_wall_28_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.3589281, 0.3589281, 0.3589281)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_29"
{
    float3 xformOp:scale = (0.31227362, 0.31227362, 1)
    double3 xformOp:translate = (6, -2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_29_material>
    }
}

def Material "pn_pillar_29_material"
{
    token outputs:surface.connect = </pn_pillar_29_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.35764498, 0.35764498, 0.35764498)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_wall_30"
{
    float3 xformOp:scale = (1.3978229, 0.1, 1)
    double3 xformOp:translate = (6, 0, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cube "geom"
    {
        rel material:binding = </pn_wall_30_material>
    }
}

def Material "pn_wall_30_material"
{
    token outputs:surface.connect = </pn_wall_30_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.4396403, 0.4396403, 0.4396403)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_31"
{
    float3 xformOp:scale = (0.39950752, 0.39950752, 1)
    double3 xformOp:translate = (6, 2, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_31_material>
    }
}

def Material "pn_pillar_31_material"
{
    token outputs:surface.connect = </pn_pillar_31_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.5057158, 0.5057158, 0.5057158)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

def Xform "pn_pillar_32"
{
    float3 xformOp:scale = (0.20942327, 0.20942327, 1)
    double3 xformOp:translate = (6, 4, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

    def Cylinder "geom"
    {
        rel material:binding = </pn_pillar_32_material>
    }
}

def Material "pn_pillar_32_material"
{
    token outputs:surface.connect = </pn_pillar_32_material/diffuseShader.outputs:surface>

    def Shader "diffuseShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor = (0.26578948, 0.26578948, 0.26578948)
        float inputs:roughness = 0.4
        token outputs:surface
    }
}

